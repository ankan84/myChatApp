{"version":3,"sources":["component/Card.jsx","component/RegisterPage3.jsx","App.js","index.js"],"names":["list","link","photo","Card","name","useParams","useState","message","setMessage","data","setData","lock","setLock","goDown","main_test","document","getElementById","scrollTo","top","window","innerHeight","length","behavior","apiCall","a","play","fetch","method","headers","Accept","body","JSON","stringify","userData","credentials","res","status","json","tData","useEffect","setTimeout","id","src","type","className","onClick","class","map","ele","index","style","margin","value","onChange","e","target","RegisterPage3","history","useHistory","setName","push","App","exact","path","component","ReactDOM","render"],"mappings":"oOAGMA,EAAO,CAAC,CACVC,KAAM,oBACNC,MAAO,yBACR,IA8JYC,MAxJf,WACI,IAAQC,EAASC,cAATD,KACR,EAA8BE,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAqBJ,oBAAS,GAA9B,mBAAOK,EAAP,KAAYC,EAAZ,KAGA,SAASC,IACN,IAAIC,EAAUC,SAASC,eAAe,aAC7BD,SAASC,eAAe,QACjCF,EAAUG,SAAS,CACfC,IAAqC,KAAhCC,OAAOC,YAAYX,EAAKY,QAC7BC,SAAS,WAKhB,IAAMC,EAAO,uCAAG,sBAAAC,EAAA,sDAEZhB,EAAW,IACRD,IACIQ,SAASC,eAAe,MAC5BS,OACaC,MAAM,QAAS,CAC3BC,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAE5B,OAAMG,eAZrB,2CAAH,qDAuBP0B,EAAQ,uCAAG,8BAAAT,EAAA,+EAGSE,MAAM,QAAS,CAC7BC,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBK,YAAa,YATR,UAWU,OARbC,EAHG,QAWDC,OAXC,gCAaeD,EAAIE,OAbnB,OAaCC,EAbD,OAcL5B,EAAQ4B,GAdH,mHAAH,qDAoDd,OAdAC,qBAAU,WACNN,MAEF,CAACA,IAEHM,qBAAU,WACNC,YAAW,WACP3B,MACF,OACJ,IAKM,qCACJ,8BACI,uBAAO4B,GAAG,KAAV,SAEI,wBAAQC,IAAK1C,EAAK,GAAGC,KAAM0C,KAAK,kBAMxC,qBAAKC,UAAU,YAAf,SACI,sBAAKA,UAAU,OAAOH,GAAG,OAAzB,UAEI,sBAAKG,UAAU,eAAeH,GAAG,YAAjC,UACD,mBAAGG,UAAU,qCAAqCC,QAAS,WACnDhC,OAKR,mBAAGiC,MAAM,yBAAyBD,QAjD7C,WAEQjC,GADM,IAAPD,MAkDaF,EAAKsC,KAAI,SAACC,EAAKC,GACX,OAAQ,qBAAiBL,UAAU,mBAA3B,SACJ,8BAAG,sBAAMA,UAAU,QAAhB,SAAyBI,EAAI5C,OAAY,oBAAI8C,MAAO,CAAEC,OAAQ,KAC5DH,EAAIzC,YAFK0C,SAc9B,uBAAON,KAAK,OAAOS,MAAO7C,EAAS8C,SAAU,SAACC,GAE1C9C,EAAW8C,EAAEC,OAAOH,UAExB,yBAASP,QACL,WAEItB,KAHR,SAMG,mBAAGqB,UAAU,iCChIjBY,MApBf,WACI,IAAOC,EAAQC,cAChB,EAAqBpD,mBAAS,IAA9B,mBAAOF,EAAP,KAAYuD,EAAZ,KACC,OACI,qBAAKf,UAAU,YAAf,SACI,sBAAKA,UAAU,cAAf,UACI,sCACA,uBAAOD,KAAK,OAAOU,SAAU,SAACC,GAC1BK,EAAQL,EAAEC,OAAOH,QAEhBR,UAAU,gBACf,wBAAQC,QAAS,WACTY,EAAQG,KAAR,gBAAsBxD,KAD9B,0B,MCMDyD,MAVf,WACE,OACE,eAAC,IAAD,WACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWR,IACjC,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,cAAcC,UAAW7D,Q,OCP/C8D,IAASC,OACP,cAAC,IAAD,UACA,cAAC,EAAD,MAEAnD,SAASC,eAAe,W","file":"static/js/main.76a30c64.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst list = [{\r\n    link: '../music/what.mp3',\r\n    photo: '../photos/logo192.png'\r\n}, {\r\n\r\n}]\r\n\r\n\r\n\r\nfunction Card() {\r\n    const { name } = useParams();\r\n    const [message, setMessage] = useState(\"\");\r\n    const [data, setData] = useState([])\r\n    const [lock,setLock]=useState(false);\r\n   \r\n    \r\n    function goDown(){\r\n       let main_test=document.getElementById('main_test');\r\n       let card=document.getElementById('card');\r\n       main_test.scrollTo({\r\n           top:(window.innerHeight+data.length)*100,\r\n           behavior:\"smooth\"\r\n       })\r\n       \r\n      \r\n   }\r\n    const apiCall = async () => {\r\n\r\n        setMessage(\"\")\r\n        if(message){\r\n        let mu=document.getElementById('mu');\r\n        mu.play();\r\n        const putdata = fetch('/chat', {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ name, message })\r\n\r\n        }\r\n        )\r\n       \r\n    }\r\n\r\n\r\n    }\r\n\r\n\r\n    const userData = async () => {\r\n        try {\r\n           \r\n            const res = await fetch('/chat', {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                credentials: \"include\"\r\n            })\r\n            if (res.status === 200) {\r\n\r\n                const tData = await res.json();\r\n                setData(tData);\r\n\r\n            }\r\n               \r\n\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n    function lock_func(){\r\n        if(lock===false){\r\n            setLock(true)\r\n        }\r\n        else{\r\n           setLock(false)\r\n        }\r\n\r\n      \r\n       \r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        userData();\r\n        \r\n    },[userData])\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n            goDown()\r\n        },1000)\r\n    },[])\r\n\r\n\r\n    \r\n\r\n    return (<>\r\n        <div>\r\n            <audio id=\"mu\">\r\n\r\n                <source src={list[0].link} type=\"audio/mp3\" />\r\n\r\n            </audio>\r\n\r\n        </div>\r\n      \r\n        <div className=\"container\">\r\n            <div className=\"card\" id=\"card\">\r\n                \r\n                <div className=\"main_content\" id=\"main_test\">\r\n               <i className=\"fas fa-angle-double-down down_btn \" onClick={()=>{\r\n                       goDown();\r\n                       \r\n                      \r\n                  \r\n               }}></i>\r\n               <i class=\"fas fa-unlock lock_btn\" onClick={lock_func}></i>\r\n                    {\r\n                        data.map((ele, index) => {\r\n                            return (<div key={index} className=\"main_content_div\">\r\n                                <p><span className=\"hello\">{ele.name}</span><hr style={{ margin: 0 }} />\r\n                                    {ele.message}</p>\r\n                                    \r\n                            </div>\r\n \r\n\r\n                            )\r\n                        })\r\n\r\n                    }\r\n                   \r\n                </div>\r\n\r\n                <input type=\"text\" value={message} onChange={(e) => {\r\n\r\n                    setMessage(e.target.value);\r\n                }} />\r\n                <section onClick={\r\n                    () => {\r\n                      \r\n                        apiCall()\r\n                    \r\n                    }\r\n                } ><i className=\"fab fa-asymmetrik\"></i></section>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    </>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default Card\r\n","import React,{useState} from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction RegisterPage3() {\r\n    const  history=useHistory();\r\n   const [name,setName]=useState('')\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"information\">\r\n                <h1>Name</h1>\r\n                <input type=\"text\" onChange={(e)=>{\r\n                    setName(e.target.value);\r\n\r\n                }}   className=\"input_style\"/>\r\n                <button onClick={()=>{\r\n                        history.push(`/chat/${name}`)\r\n                }}> Enter</button>\r\n            </div>\r\n             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage3\r\n","import React from 'react';\nimport {Route,Switch} from 'react-router-dom';\nimport Card from './component/Card';\nimport RegisterPage3 from './component/RegisterPage3';\n\n\n\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Switch>\n    <Route exact path='/' component={RegisterPage3}/>\n    <Route exact path='/chat/:name' component={Card}/>\n\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>   \n  <App></App>\n </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}